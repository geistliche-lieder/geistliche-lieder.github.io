const s=location.pathname.split("/").slice(0,-1).join("/"),h=[s+"/_app/immutable/entry/app.Cpur-0Ch.js",s+"/_app/immutable/nodes/0.P05Ul5Gn.js",s+"/_app/immutable/nodes/1.DJyIn0eh.js",s+"/_app/immutable/nodes/2.B2zIWZhX.js",s+"/_app/immutable/assets/2.C68uEXuQ.css",s+"/_app/immutable/nodes/3.Dgl8CEtU.js",s+"/_app/immutable/nodes/4.7IP9kupa.js",s+"/_app/immutable/nodes/5.CNWG2niH.js",s+"/_app/immutable/chunks/9Wr19g68.js",s+"/_app/immutable/chunks/BBZgiPtT.js",s+"/_app/immutable/chunks/BDe7l82h.js",s+"/_app/immutable/chunks/C9eVV3lO.js",s+"/_app/immutable/assets/SettingsPage.lBpm-v_i.css",s+"/_app/immutable/chunks/CIFocBDO.js",s+"/_app/immutable/chunks/CVzY_LkH.js",s+"/_app/immutable/chunks/CjhTohnO.js",s+"/_app/immutable/assets/app.BzuuARH8.css",s+"/_app/immutable/chunks/DDsrNjAt.js",s+"/_app/immutable/chunks/DMgpOUNq.js",s+"/_app/immutable/chunks/DWFm0phf.js",s+"/_app/immutable/chunks/DkYXoef1.js",s+"/_app/immutable/chunks/UU5L8KET.js",s+"/_app/immutable/chunks/UhDaAWzj.js",s+"/_app/immutable/chunks/_b71m-da.js",s+"/_app/immutable/chunks/tMrZPO6s.js",s+"/_app/immutable/entry/start.BSiFelIr.js"],u=[s+"/.nojekyll",s+"/android-chrome-192x192.png",s+"/android-chrome-512x512.png",s+"/apple-touch-icon-precomposed.png",s+"/apple-touch-icon.png",s+"/browserconfig.xml",s+"/favicon-16x16.png",s+"/favicon-32x32.png",s+"/favicon.ico",s+"/favicon.png",s+"/home_screen_android.jpg",s+"/home_screen_apple.jpg",s+"/index.css",s+"/mstile-144x144.png",s+"/mstile-150x150.png",s+"/mstile-310x150.png",s+"/mstile-310x310.png",s+"/mstile-70x70.png",s+"/robots.txt",s+"/safari-pinned-tab.svg",s+"/site.webmanifest",s+"/songs.json"],i="1740432758096",n=self,o=`cache${i}`,m=h.concat(u),r=new Set(m);n.addEventListener("install",e=>{e.waitUntil(caches.open(o).then(t=>t.addAll(m)).then(()=>{n.skipWaiting()}))});n.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async t=>{for(const a of t)a!==o&&await caches.delete(a);n.clients.claim()}))});async function d(e){const t=await caches.open(`offline${i}`);try{const a=await fetch(e);return t.put(e,a.clone()),a}catch(a){const c=await t.match(e);if(c)return c;throw a}}n.addEventListener("fetch",e=>{if(e.request.method!=="GET"||e.request.headers.has("range"))return;const t=new URL(e.request.url),a=t.protocol.startsWith("http"),c=t.hostname===self.location.hostname&&t.port!==self.location.port,p=t.host===self.location.host&&r.has(t.pathname),l=e.request.cache==="only-if-cached"&&!p;a&&!c&&!l&&e.respondWith((async()=>p&&await caches.match(e.request)||d(e.request))())});
